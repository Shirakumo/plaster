#|
 This file is a part of TyNETv5/Radiance
 (c) 2013 TymoonNET/NexT http://tymoon.eu (shinmera@tymoon.eu)
 Author: Nicolas Hafner <shinmera@tymoon.eu>
|#

(in-package :radiance-mod-plaster)

(defparameter *pastebin-type-map*
  (loop with table = (make-hash-table :test 'equalp)
        for (a . b) in '(("c" . "text/x-csrc")
                         ("c_mac" . "text/x-csrc")
                         ("csharp" . "text/x-chsarp")
                         ("cpp" . "text/x-c++src")
                         ("cpp-qt" . "text/x-c++src")
                         ("c_loadrunner" . "C: Loadrunner")
                         ("clojure" . "text/x-clojure")
                         ("klonec" . "text/x-csrc")
                         ("klonecpp" . "text/x-c++src")
                         ("cobol" . "text/x-cobol")
                         ("coffeescript" . "text/x-coffeescript")
                         ("css" . "text/css")
                         ("d" . "text/x-d")
                         ("diff" . "text/x-diff")
                         ("eiffel" . "text/x-eiffel")
                         ("erlang" . "text/x-rlang")
                         ("fsharp" . "text/x-fsharp")
                         ("fortran" . "text/x-Fortran")
                         ("go" . "text/x-go")
                         ("groovy" . "text/x-groovy")
                         ("haskell" . "text/x-haskell")
                         ("html4strict" . "text/html")
                         ("html5" . "text/html")
                         ("java" . "text/x-java")
                         ("java5" . "text/x-java")
                         ("javascript" . "text/javascript")
                         ("jquery" . "text/javascript")
                         ("latex" . "text/x-stex")
                         ("lisp" . "text/x-common-lisp")
                         ("lua" . "text/x-lua")
                         ("mirc" . "text/mirc")
                         ("mysql" . "text/x-mysql")
                         ("text" . "text/plain")
                         ("ocaml" . "text/x-ocaml")
                         ("octave" . "text/x-octave")
                         ("pascal" . "text/x-pascal")
                         ("perl" . "text/x-perl")
                         ("perl6" . "text/x-perl")
                         ("php" . "application/x-httpd-php")
                         ("properties" . "text/x-properties")
                         ("python" . "text/x-python")
                         ("q" . "text/x-q")
                         ("rsplus" . "text/x-rsrc")
                         ("rpmspec" . "text/x-rpm-spec")
                         ("ruby" . "text/x-ruby")
                         ("scala" . "text/x-scala")
                         ("scheme" . "text/x-scheme")
                         ("smalltalk" . "text/x-stsrc")
                         ("smarty" . "text/x-smarty")
                         ("sparql" . "text/x-sparql-query")
                         ("sql" . "text/x-sql")
                         ("tcl" . "text/x-tcl")
                         ("vbnet" . "text/x-vb")
                         ("verilog" . "text/x-verilog")
                         ("xml" . "application/xml")
                         ("yaml" . "text/x-yaml")
                         ("z80" . "text/x-z80"))
        do (setf (gethash a table) b)
        finally (return table)))

(defun pastebin->type (pastebin-type)
  (gethash pastebin-type *pastebin-type-map*))
